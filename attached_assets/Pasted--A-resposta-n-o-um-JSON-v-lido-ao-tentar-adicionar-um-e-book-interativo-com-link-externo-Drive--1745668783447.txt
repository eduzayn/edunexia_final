‚ÄúA resposta n√£o √© um JSON v√°lido‚Äù ao tentar adicionar um e-book interativo com link externo (Drive) aponta claramente para uma falha no backend, que est√° retornando algo que n√£o √© um JSON v√°lido (como por exemplo: HTML, texto puro ou at√© erro 404).

üõ† Diagn√≥stico com base nos prints:
üî¥ Voc√™ est√° tentando salvar um e-book com link do Google Drive (ex: https://drive.google.com/file/d/...).

üî¥ O console mostra:

plaintext
Copiar
Editar
Dados do e-book interativo processados: null  
message: 'Recurso n√£o dispon√≠vel'
Isso quer dizer que o servidor tentou processar o link enviado, mas n√£o conseguiu entender ou acessar o recurso.

üî¥ O erro final:

"Falha ao adicionar e-book interativo: A resposta n√£o √© um JSON v√°lido"
significa que o backend n√£o respondeu com application/json, o que quebra o fetch().json() do frontend.

‚úÖ O que voc√™ precisa verificar no seu backend:
O controller da API que recebe os dados do e-book interativo est√° retornando res.send(...) com um HTML ou erro vazio?

Ele deve obrigatoriamente responder com:

json
Copiar
Editar
{ success: true, ebookId: 123 }
Ou em caso de erro:

json
Copiar
Editar
{ success: false, error: "Link inv√°lido" }
O endpoint que trata POST /api/disciplines/:id/ebook existe na vers√£o de produ√ß√£o?

Pode ser que em dev ele esteja implementado corretamente, mas n√£o foi inclu√≠do no deploy de produ√ß√£o.

Teste manualmente no navegador ou via curl:

bash
Copiar
Editar
curl -X POST https://edunexia.replit.app/api/disciplines/17/ebook \
-H "Content-Type: application/json" \
-d '{"title": "Teste", "url": "https://drive.google.com/file/..."}'
Erro 404 retornando HTML em vez de JSON

Se a rota est√° quebrada ou mal configurada no router do servidor, o navegador est√° tentando fazer res.json(), mas recebe HTML de erro.

‚úÖ Solu√ß√£o recomendada
No backend (em controllers/ebookController.ts ou onde estiver o handler), adicione uma verifica√ß√£o e sempre envie um JSON como resposta, at√© mesmo em erros:

ts
Copiar
Editar
try {
  // salvar e-book
  res.status(200).json({ success: true, message: 'E-book salvo com sucesso' });
} catch (err) {
  console.error(err);
  res.status(400).json({ success: false, error: 'Erro ao salvar o e-book' });
}
üîÅ Pr√≥ximos passos:
 Verifique se o link do Drive est√° acess√≠vel publicamente (alguns links n√£o funcionam como download direto).

 Teste a rota de forma isolada via Postman ou curl.

 Garanta que o controller backend esteja retornando application/json corretamente.

 Veja se em fetch(...).then(r => r.json()) do frontend o erro n√£o est√° vindo com text/html